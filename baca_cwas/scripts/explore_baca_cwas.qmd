


```{r}
library(data.table)
library(glue)
library(dplyr)
```

```{r}
<<<<<<< HEAD
data_dir <- '/lus/grand/projects/TFXcan/imlab/data/baca_cwas/cwas_weights'
project_dir <- '/lus/grand/projects/TFXcan/imlab/users/temi/projects/TFXcan/baca_cwas'
=======
data_dir <- '/lus/grand/projects/covid-ct/imlab/data/baca_cwas/cwas_weights'
project_dir <- '/lus/grand/projects/covid-ct/imlab/users/temi/projects/TFXcan/baca_cwas'
>>>>>>> 8d1e50b0eb3dd8bdfc1db9105ea1984253c9762d
output_dir <- glue('{project_dir}/data')
TF <- 'AR'
```

```{r}
ar_zip <- glue('{data_dir}/AR.zip')
```

```{r}
file_names <- unzip(ar_zip, list=T)$Name
files_to_read <- grep(pattern='^\\bAR\\b.*\\bRDat\\b$', x=file_names, value=T)
files_to_read[1:5]
```

unzip the file
```{r}
zip::unzip(ar_zip, files=files_to_read, exdir=output_dir)
```

```{r}
ar_files <- list.files(glue('{output_dir}/{TF}'))
ar_files_locus <- sapply(strsplit(x=ar_files, split='\\.'), getElement, 1)
ar_files_locus[1:5]
```

```{r}
out <- purrr::map(.x=1:length(ar_files_locus), .f=function(i){
    locus <- ar_files_locus[i]
    load(glue('{output_dir}/{TF}/{locus}.wgt.RDat'), rdt <- new.env())
    wgts <- as.data.frame(rdt$wgt.matrix)
    wgts <- wgts %>% tibble::rownames_to_column('snp_id') %>% dplyr::mutate(locus=locus)
    
    snp_info <- rdt$snps %>% as.data.frame() %>% select(all_of(c('V1', 'V3', 'V2', 'V4', 'V5'))) 
    colnames(snp_info) <- c('chr', 'snp_id', 'position', 'a1', 'a2')
    dt <- merge(wgts, snp_info, by='snp_id')
    
    dt <- relocate(dt, all_of(c('locus', 'chr', 'position', 'a1', 'a2')), .after=snp_id)
    return(dt)
}, .progress=T)

cwas_db <- do.call('rbind', out)
```

```{r}
# collect extra columns
extra_dt <- purrr::map(.x=1:length(ar_files_locus), .f=function(i){
    locus <- ar_files_locus[i]
    load(glue('{output_dir}/{TF}/{locus}.wgt.RDat'), rdt <- new.env())
    extra <- c(locus, TF, rdt$N.tot, rdt$N.as, rdt$cv.performance[c('rsq', 'pval'), c('lasso')] |> unname()) |> as.data.frame() |> t() |> unname()
    return(extra)
}, .progress=T)

extra_dt <- do.call('rbind', extra_dt) |> as.data.frame()
colnames(extra_dt) <- c('locus', 'TF', 'n_snps_in_window', "n.snps.in.model", "pred.perf.R2", "pred.perf.pval")
extra_dt[1:5, ]
```


```{r}
dim(cwas_db) ; cwas_db[1:5, ]
```

```{r}
write.csv(cwas_db, file=glue('{project_dir}/output/{TF}_baca_cwas_weights_2023-01-26.csv'), row.names=F, quote=F)
```


Lift over coordinates
```{r}
cwas_db <- data.table::fread(file=glue('{project_dir}/output/{TF}_baca_cwas_weights_2023-01-26.csv'))
cwas_db[1:5, ]
```
```{r}
# create a bed file to be lifted over
coordinates_bed_files <- do.call('rbind', strsplit(x=cwas_db$locus, split='\\-|\\:')) |> 
    as.data.frame() %>% 
    dplyr::distinct(V1, V2, V3, .keep_all = TRUE) %>% 
    dplyr::rename(chr=V1, start=V2, end=V3) %>%
    dplyr::mutate(id=paste(paste(chr, start, sep=':'), end, sep='-'))

coordinates_bed_files[1:5, ]
```

```{r}
write.table(coordinates_bed_files, glue("{project_dir}/bed_files/baca_cwas_loci_hg19.bed"), col.names=F, quote=F, row.names=F)
```

```{r}
# lift over these files
<<<<<<< HEAD
liftover_sh <-  "/grand/projects/TFXcan/imlab/users/temi/projects/TFXcan/TFPred_pipeline/scripts/utilities/liftover.sh"
liftover_cmd <- '/lus/grand/projects/TFXcan/imlab/users/temi/software/liftOver'
input_bed <- glue("{project_dir}/bed_files/baca_cwas_loci_hg19.bed")
chain_file <- '/lus/grand/projects/TFXcan/imlab/data/liftover_files/hg19ToHg38.over.chain.gz'
=======
liftover_sh <-  "/grand/projects/covid-ct/imlab/users/temi/projects/TFXcan/TFPred_pipeline/scripts/utilities/liftover.sh"
liftover_cmd <- '/lus/grand/projects/covid-ct/imlab/users/temi/software/liftOver'
input_bed <- glue("{project_dir}/bed_files/baca_cwas_loci_hg19.bed")
chain_file <- '/lus/grand/projects/covid-ct/imlab/data/liftover_files/hg19ToHg38.over.chain.gz'
>>>>>>> 8d1e50b0eb3dd8bdfc1db9105ea1984253c9762d
output_bed <- glue("{project_dir}/bed_files/baca_cwas_loci_hg38.bed")
unmapped_bed <- glue("{project_dir}/bed_files/baca_cwas_loci_unmapped.bed")
```

```{r}
file.exists(liftover_sh) ; file.exists(liftover_cmd) ; file.exists(chain_file) ; file.exists(input_bed)
```

```{r}
cmd <- glue('qsub -v liftover_cmd={liftover_cmd},chain_file={chain_file},input_bed={input_bed},output_bed={output_bed},unmapped_bed={unmapped_bed} {liftover_sh}')
cmd
```

```{r}
system(cmd)
```

```{r}
system('qstat -u temi')
```

Read in new bed files and match 
```{r}
hg38_bed_files <- data.table::fread(output_bed, col.names=c('chr', 'hg38_start', 'hg38_end', 'hg19_id'))
hg38_bed_files <- hg38_bed_files %>% 
    dplyr::mutate(hg38_id=paste(paste(chr, hg38_start, sep=':'), hg38_end, sep='-')) %>%
    dplyr::select(chr, hg19_id, hg38_id)
hg38_bed_files$chr <- as.numeric(gsub(pattern='chr', replacement='', x=hg38_bed_files$chr))
hg38_bed_files[1:5, ]
```

```{r}
hg38_cwas_db <- dplyr::left_join(cwas_db, hg38_bed_files, by=c('locus' = 'hg19_id', 'chr'='chr'))
hg38_cwas_db$locus <- hg38_cwas_db$hg38_id
hg38_cwas_db$hg38_id <- NULL
hg38_cwas_db[1:5, ] ; dim(hg38_cwas_db)
```

Liftover the snps too
```{r}
library(biomaRt)
```

```{r}
hg19_snps <- hg38_cwas_db %>%
    dplyr::select(snp_id, position, locus, chr) %>%
    dplyr::mutate(start = position, chr=paste0('chr', chr, sep='')) %>%
    dplyr::rename(end = position) %>%
    dplyr::relocate(chr, start, end, .before=snp_id)
hg19_snps[1:5, ] ; dim(hg19_snps)
```

```{r}
write.table(hg19_snps, glue("{project_dir}/snps/hg19_snps.bed"), col.names=F, quote=F, row.names=F)
```

```{r}
tt <- dplyr::inner_join(extra_dt, hg38_bed_files, by=c('locus' = 'hg19_id'))
tt$locus <- tt$hg38_id
tt$hg38_id <- NULL
tt$chr <- NULL
tt[1:5, ]
```

```{r}
write.table(tt, file=glue('{project_dir}/output/{TF}_baca_cwas_extra_hg38_2023-01-27.txt'), col.names=T, row.names=F, quote=F)
```



```{r}
# lift over these files
<<<<<<< HEAD
liftover_sh <-  "/grand/projects/TFXcan/imlab/users/temi/projects/TFXcan/TFPred_pipeline/scripts/utilities/liftover.sh"
liftover_cmd <- '/lus/grand/projects/TFXcan/imlab/users/temi/software/liftOver'
input_bed <- glue("{project_dir}/snps/hg19_snps.bed")
chain_file <- '/lus/grand/projects/TFXcan/imlab/data/liftover_files/hg19ToHg38.over.chain.gz'
=======
liftover_sh <-  "/grand/projects/covid-ct/imlab/users/temi/projects/TFXcan/TFPred_pipeline/scripts/utilities/liftover.sh"
liftover_cmd <- '/lus/grand/projects/covid-ct/imlab/users/temi/software/liftOver'
input_bed <- glue("{project_dir}/snps/hg19_snps.bed")
chain_file <- '/lus/grand/projects/covid-ct/imlab/data/liftover_files/hg19ToHg38.over.chain.gz'
>>>>>>> 8d1e50b0eb3dd8bdfc1db9105ea1984253c9762d
output_bed <- glue("{project_dir}/snps/hg38_snps.bed")
unmapped_bed <- glue("{project_dir}/bed_files/hg19_snps_unmapped.bed")

file.exists(liftover_sh) ; file.exists(liftover_cmd) ; file.exists(chain_file) ; file.exists(input_bed)
```

```{r}
cmd <- glue('qsub -v liftover_cmd={liftover_cmd},chain_file={chain_file},input_bed={input_bed},output_bed={output_bed},unmapped_bed={unmapped_bed} {liftover_sh}')
cmd
```

```{r}
system(cmd)
```

```{r}
system('qstat -u temi')
```

REad in and merge
```{r}
hg38_snp_files <- data.table::fread(output_bed, col.names=c('chr', 'hg38_start', 'hg38_end', 'snp_id', 'hg38_locus'))
hg38_snp_files$chr <- as.numeric(gsub(pattern='chr', replacement='', x=hg38_snp_files$chr))
hg38_snp_files[1:5, ]
```

```{r}
hg38_cwas_db[1:5, ]
```

```{r}
tt <- dplyr::left_join(hg38_cwas_db, hg38_snp_files, by=c('locus' = 'hg38_locus', 'snp_id'='snp_id', 'chr' = 'chr'))
tt$position <- tt$hg38_start
tt$hg38_start <- tt$hg38_end <- NULL
tt[1:5, ] ; dim(tt)
```


```{r}
# write out the snps to a file
write.table(tt, file=glue('{project_dir}/output/{TF}_baca_cwas_weights_hg38_2023-01-27.txt'), col.names=T, row.names=F, quote=F)
```

```{r}
lo_snps <- data.table::fread(glue("{project_dir}/bed_files/baca_cwas_loci_hg38.bed"))
colnames(lo_snps) <- 
```


#### Prepare the regions for ENFORMER
```{r}
# write out the snps to a file
cwas_baca_db <- data.table::fread(file=glue('{project_dir}/output/{TF}_baca_cwas_weights_hg38_2023-01-27.txt')) |> as.data.frame()
cwas_baca_db[1:5, ] ; dim(cwas_baca_db)
```
```{r}
loci <- cwas_baca_db$locus |> unique() %>% gsub('\\:|\\-', '_', x=.)
loci[1:5]
```

```{r}
write.table(loci, file=glue('{project_dir}/predictors/baca_cwas_{TF}_regions_hg38_2023-01-27.txt'), quote=T, row.names=F, col.names=F)
```

```{r}
run_data <- Sys.Date()
```

```{r}
# enformer_directories

```


### start here

```{r}
library(RSQLite)
library(dbplyr)
library(DBI)
```

```{r}
db_folder <- glue('{project_dir}/db_folder')
if(!dir.exists(db_folder)){dir.create(db_folder)}
```

```{r}
# write out the snps to a file
baca_weights <- data.table::fread(glue('{project_dir}/output/{TF}_baca_cwas_weights_hg38_2023-01-27.txt'))
baca_weights[1:5, ]

baca_weights$varIDs <- with(baca_weights, paste0('chr', chr, '_', position, '_', a1, '_', a2, '_', 'b38', sep=''))
```

Baca has 6 models/weights

```{r}
baca_models <- c('lasso', 'lasso.as', 'lasso.plasma', 'top1.as', 'top1.qtl', 'top1')
```

```{r}
baca_extra <- data.table::fread(glue('{project_dir}/output/{TF}_baca_cwas_extra_hg38_2023-01-27.txt'))
baca_extra <- baca_extra %>% dplyr::rename(gene=locus, genename=TF)
baca_extra$pred.perf.qval <- NA
baca_extra[1:5, ]
```

Predict_db format

```{r}
baca_weights_list <- purrr::map(.x=baca_models, function(each_m){
    model_weights <- baca_weights %>% 
        dplyr::select(gene=locus, rsid=snp_id, varID=varIDs, ref_allele=a1, eff_allele=a2, weight=as.symbol(each_m)) %>% as.data.frame()

    each_db <- DBI::dbConnect(RSQLite::SQLite(), glue('{db_folder}/baca_cwas_{each_m}.db'))
    dbWriteTable(each_db, "extra", baca_extra, overwrite=T)
    dbWriteTable(each_db, "weights", model_weights, overwrite=T)
    dbDisconnect(each_db)

    return(0)
})

names(baca_weights_list) <- baca_models
```

```{r}
lasso_weights <- baca_weights %>% dplyr::select(gene=locus, rsid=snp_id, varID=varIDs, ref_allele=a1, eff_allele=a2, weight=lasso) %>% as.data.frame()
lasso_weights[1:5, ]

lasso_db <- DBI::dbConnect(RSQLite::SQLite(), glue('{db_folder}/baca_cwas_lasso.db'))
dbWriteTable(lasso_db, "extra", baca_extra, overwrite=T)
dbWriteTable(lasso_db, "weights", lasso_weights, overwrite=T)
dbDisconnect(lasso_db)
```

```{r}

```

extra column : dunno what this is
```{r}
<<<<<<< HEAD
predixcan_dir='/lus/grand/projects/TFXcan/imlab/users/temi/projects/prediXcan/tutorial'
=======
predixcan_dir='/lus/grand/projects/covid-ct/imlab/users/temi/projects/prediXcan/tutorial'
>>>>>>> 8d1e50b0eb3dd8bdfc1db9105ea1984253c9762d
predict_db <- DBI::dbConnect(RSQLite::SQLite(), glue('{predixcan_dir}/data/models/gtex_v8_en/en_Whole_Blood.db'))
#dbplyr::src_dbi(predict_db)
extra_dt <- tbl(predict_db, 'extra') %>% as.data.frame()
extra_dt |> head()
```

```{r}
cwas_db <- DBI::dbConnect(RSQLite::SQLite(), glue('{db_folder}/baca_cwas_lasso.db'))
dbplyr::src_dbi(cwas_db)
```

```{r}
weights_tbl <- tbl(cwas_db, 'weights')
weights_tbl# %>% dplyr::select(rsid)
```

```{r}
extra_tbl <- tbl(cwas_db, 'extra')
extra_tbl # %>% dplyr::select(rsid)
```

```{r}
```


```{r}
dbDisconnect(cwas_db)
```



# prepare SQLite database


```{r}

```





