---
title: "Analysing all these models: l-TFPred, TFPred and CWAS"
author: "Temi"
date: 'Wed Jul 26 2023'
format: 
  pdf: 
    toc: true
    number-sections: true
    code-line-numbers: true
---

```{r}
library(data.table)
library(tidyverse)
library(glue)
```

```{r}
# for manhattan plots
devtools::source_gist('https://gist.github.com/TemiPete/250d9922b9516691f83bb1fd999a3ccc')
devtools::source_gist('https://gist.github.com/hakyim/38431b74c6c0bf90c12f')
devtools::source_gist('https://gist.github.com/hakyim/5d2251ea1a86009499e4ffdf47fe2735')
```


```{r}
# where are the files
ltfpred_scores_file <- '/beagle3/haky/users/temi/projects/TFXcan/experiments/compare_predictors/l-tfpred_predictions/EUR_AR_Prostate/baca_cwas_predict.txt'
tfpred_scores_file <- '/project2/haky/temi/projects/TFXcan/experiments_data/aggByCollect_AR_Prostate_CWAS.linear.txt.gz'

baca_models <- c('lasso', 'lasso.as', 'lasso.plasma', 'top1.as', 'top1.qtl', 'top1')
cwas_scores_folder <- '/project2/haky/temi/projects/TFXcan/prediXcan/output/cwas_individuals_imputed'
```

```{r}
cwas_scores <- data.table::fread(glue('{cwas_scores_folder}/{baca_models[6]}/baca_cwas_predict.txt'))
cwas_scores <- cwas_scores[, -1] |> t() %>% as.data.frame()
colnames(cwas_scores) <- cwas_scores[1, ]
cwas_scores <- cwas_scores[-1, ] %>% tibble::rownames_to_column('locus')
cwas_scores$locus <- gsub('\\:|\\-', '_', cwas_scores[['locus']])
cwas_scores <- cwas_scores %>% dplyr::mutate(across(!locus, as.numeric))
print(dim(cwas_scores)) ; print(cwas_scores[1:5, 1:5])
```

```{r}
ltfpred_scores <- data.table::fread(ltfpred_scores_file)
ltfpred_scores <- ltfpred_scores[, -1] |> t() %>% as.data.frame()
colnames(ltfpred_scores) <- ltfpred_scores[1, ]
ltfpred_scores <- ltfpred_scores[-1, ] %>% tibble::rownames_to_column('locus')
ltfpred_scores$locus <- gsub('\\:|\\-', '_', ltfpred_scores[['locus']])
ltfpred_scores <- ltfpred_scores %>% dplyr::mutate(across(!locus, as.numeric))
print(dim(ltfpred_scores)) ; print(ltfpred_scores[1:5, 1:5])
```

```{r}
tfpred_scores <- data.table::fread(tfpred_scores_file)
print(tfpred_scores[1:5, 1:5]) ; print(dim(tfpred_scores))
```

Are there common loci?

```{r}
common_loci <- intersect(unique(ltfpred_scores[['locus']]),
    intersect(unique(tfpred_scores[['locus']]), unique(cwas_scores[['locus']]))
)

length(common_loci)
```

select only these
```{r}
ltfpred_scores <- ltfpred_scores %>% dplyr::filter(locus %in% common_loci) %>% tibble::column_to_rownames('locus') %>% as.matrix() %>% t()
tfpred_scores <- tfpred_scores %>% dplyr::filter(locus %in% common_loci) %>% tibble::column_to_rownames('locus') %>% as.matrix() %>% t()
cwas_scores <- cwas_scores %>% dplyr::filter(locus %in% common_loci) %>% tibble::column_to_rownames('locus') %>% as.matrix() %>% t()
```

match and order the rownames and column names
```{r}
# match and order the rownames and colnames
ltfpred_scores <- ltfpred_scores[order(match(rownames(ltfpred_scores), rownames(cwas_scores))), ]
ltfpred_scores <- ltfpred_scores[, order(match(colnames(ltfpred_scores), colnames(cwas_scores)))]

tfpred_scores <- tfpred_scores[order(match(rownames(tfpred_scores), rownames(cwas_scores))), ]
tfpred_scores <- tfpred_scores[, order(match(colnames(tfpred_scores), colnames(cwas_scores)))]

identical(rownames(ltfpred_scores), rownames(cwas_scores))
identical(colnames(tfpred_scores), colnames(cwas_scores))
```

```{r}
ltfpred_scores[1:5, 1:5] ; tfpred_scores[1:5, 1:5] ; cwas_scores[1:5, 1:5]
```

## tfpred vs l-tfpred
```{r}
tfpred_ltfpred_regr_test <- purrr::map(1:ncol(tfpred_scores), function(i){
  out <- fastlm(tfpred_scores[, i], ltfpred_scores[, i])
  return(out)
}, .progress=T)

names(tfpred_ltfpred_regr_test) <- rownames(tfpred_scores)
tfpred_ltfpred_regr_test_dt <- do.call('rbind', tfpred_ltfpred_regr_test)
tfpred_ltfpred_regr_test_dt[1:5, ]
```

```{r}
qq_generic(tfpred_ltfpred_regr_test_dt[, 'pval'] |> as.numeric(), distribution='uniform', neg_log10_values=T, BH=T, params_to_legend=list(x='right', bty = "n"), params_to_plot=list(frame.plot=F, pch=19))
mtext(expression("qqplot of" ~ italic(p) ~ "(regression test)"), side=3, line=2, adj=0.05, cex=1.2)
mtext(glue("TFPred scores on l-TFPred scores in CWAS individuals"), side=3, line=0, cex=1.2, adj=0.05)
```

```{r}
hist(tfpred_ltfpred_regr_test_dt[, 'pval'] |> as.numeric(), main='', xlab=expression(italic(p)*"-value"), cex.lab=1, col='brown')
mtext(expression("Distribution of" ~ p*"-values"), side=3, line=2, adj=0.05, cex=1.2) 
mtext(glue("TFPred scores on l-TFPred scores in CWAS individuals"), side=3, line=0, cex=1.2, adj=0.05)
```

```{r}
hist(tfpred_ltfpred_regr_test_dt[, 'betahat'] |> as.numeric(), main='', xlab=expression(italic(hat(beta))*', estimated beta'), cex.lab=1, col='brown')
mtext(expression("Distribution of" ~ hat(beta)), side=3, line=2, adj=0.05, cex=1.2) 
mtext(glue("TFPred scores on l-TFPred scores in CWAS individuals"), side=3, line=0, cex=1.2, adj=0.05)
```




## tfpred vs cwas
```{r}
tfpred_cwas_regr_test <- purrr::map(1:nrow(tfpred_scores), function(i){
  out <- fastlm(tfpred_scores[i, ], cwas_scores[i, ])
  return(out)
}, .progress=T)

names(tfpred_cwas_regr_test) <- rownames(tfpred_scores)
tfpred_cwas_regr_test_dt <- do.call('rbind', tfpred_cwas_regr_test)
tfpred_cwas_regr_test_dt[1:5, ]
```

```{r}
qq_generic(tfpred_cwas_regr_test_dt[, 'pval'] |> as.numeric(), distribution='uniform', neg_log10_values=T, BH=T, params_to_legend=list(x='topleft', bty = "n"), params_to_plot=list(frame.plot=F, pch=19))
mtext(expression("qqplot of" ~ italic(p) ~ "(regression test)"), side=3, line=2, adj=0.05, cex=1.2)
mtext(glue("TFPred scores on CWAS scores in CWAS individuals"), side=3, line=0, cex=1.2, adj=0.05)
```

```{r}
hist(tfpred_cwas_regr_test_dt[, 'pval'] |> as.numeric(), main='', xlab=expression(italic(p)*"-value"), cex.lab=1, col='brown')
mtext(expression("Distribution of" ~ p*"-values"), side=3, line=2, adj=0.05, cex=1.2) 
mtext(glue("TFPred scores on CWAS scores in CWAS individuals"), side=3, line=0, cex=1.2, adj=0.05)
```

```{r}
hist(tfpred_cwas_regr_test_dt[, 'betahat'] |> as.numeric(), main='', xlab=expression(italic(hat(beta))*', estimated beta'), cex.lab=1, col='brown')
mtext(expression("Distribution of" ~ hat(beta)), side=3, line=2, adj=0.05, cex=1.2) 
mtext(glue("TFPred scores on CWAS scores in CWAS individuals"), side=3, line=0, cex=1.2, adj=0.05)
```


```{r}
plot(tfpred_cwas_regr_test_dt[, 'betahat'], 
    tfpred_ltfpred_regr_test_dt[, 'betahat'], main='', 
    ylab=expression(italic(hat(beta))*' - TFPred on l-TFPred scores'), 
    xlab=expression(italic(hat(beta))*' - TFPred on CWAS scores'),
    cex.lab=1
)
```


```{r}
common_loci[1]
```

```{r}
plot(x=tfpred_scores[common_loci[1], ], y=ltfpred_scores[common_loci[1], ], frame.plot=F, ylab='l-TFPred scores', xlab='TFPred scores')
mtext(common_loci[1], side=3, line=2, adj=0.05, cex=1.2)
```


```{r}
plot(x=tfpred_scores[common_loci[2], ], y=ltfpred_scores[common_loci[2], ], frame.plot=F, ylab='l-TFPred scores', xlab='TFPred scores')
mtext(common_loci[2], side=3, line=2, adj=0.05, cex=1.2)
```
```{r}
plot(x=tfpred_scores[common_loci[3], ], y=ltfpred_scores[common_loci[3], ], frame.plot=F, ylab='l-TFPred scores', xlab='TFPred scores')
mtext(common_loci[3], side=3, line=2, adj=0.05, cex=1.2)
```

```{r}
summary_file <- '/beagle3/haky/users/temi/projects/TFXcan/experiments/compare_predictors/l-tfpred_predictions/EUR_AR_Prostate/baca_cwas_summary.txt'
summary_dt <- data.table::fread(summary_file)
```


```{r}
hist(summary_dt$pred_perf_r2, main='', xlab=expression(italic(r^2)), cex.lab=1, col='brown')
mtext(expression("Distribution of" ~ r^2), side=3, line=2, adj=0.05, cex=1.2) 
mtext(glue("l-TFPred training"), side=3, line=0, cex=1.2, adj=0.05)
```


```{r}
qq_generic(summary_dt$pred_perf_pval, distribution='uniform', neg_log10_values=T, BH=T, params_to_legend=list(x='right', bty = "n"), params_to_plot=list(frame.plot=F, pch=19))
mtext(expression("qqplot of" ~ italic(p) ~ "(l-TFPred training)"), side=3, line=2, adj=0.05, cex=1.2)
```


Correlations

```{r}
# with help from Haky
cor2pval <- function(cc,nn) {
  zz = atanh(cc) * sqrt(nn-3)
  pnorm(-abs(zz))*2
}
```
```{r}
nterms <- nrow(tfpred_scores)
tf_ltf_cor <- apply(scale(tfpred_scores) * scale(ltfpred_scores), 2, sum)/nterms
tf_ltf_pvalues <- cor2pval(tf_ltf_cor, nterms) #%>% p.adjust("fdr")
tf_ltf_cor[1:5] ; tf_ltf_pvalues[1:5]
tf_ltf_dt <- cbind(cor=tf_ltf_cor, pvalue=tf_ltf_pvalues, comparison='tf_ltf') %>% as.data.frame() %>% tibble::rownames_to_column('locus')
tf_ltf_dt[1:5, ]
```

```{r}
nterms <- nrow(tfpred_scores)
tf_cwas_cor <- apply(scale(tfpred_scores) * scale(cwas_scores), 2, sum)/nterms
tf_cwas_pvalues <- cor2pval(tf_cwas_cor, nterms) #%>% p.adjust("fdr")
print(tf_cwas_cor[1:5]) ; print(tf_cwas_pvalues[1:5])
tf_cwas_dt <- cbind(cor=tf_cwas_cor, pvalue=tf_cwas_pvalues, comparison='tf_cwas') %>% as.data.frame() %>% tibble::rownames_to_column('locus')
tf_cwas_dt[1:5, ]
```


```{r}
nterms <- nrow(cwas_scores)
cwas_ltfpred_cor <- apply(scale(cwas_scores) * scale(ltfpred_scores), 2, sum)/nterms
cwas_ltfpred_pvalues <- cor2pval(cwas_ltfpred_cor, nterms) #%>% p.adjust("fdr")
print(cwas_ltfpred_cor[1:5]) ; print(cwas_ltfpred_pvalues[1:5])
cwas_ltfpred_dt <- cbind(cor=cwas_ltfpred_cor, pvalue=cwas_ltfpred_pvalues, comparison='ltf_cwas') %>% as.data.frame() %>% tibble::rownames_to_column('locus')
cwas_ltfpred_dt[1:5, ]
```

Put them all together
```{r}
tests_dt <- rbind(tf_ltf_dt, tf_cwas_dt, cwas_ltfpred_dt) %>% tidyr::pivot_longer(!c(locus, comparison)) %>% dplyr::mutate(value=as.numeric(value))

head(tests_dt)
```

```{r}
tests_dt %>% 
    dplyr::filter(name == 'cor') %>%
    ggplot2::ggplot(aes(x=value)) +
    geom_histogram() + theme_minimal() + facet_grid(comparison ~ ., scales = "free") +
    labs(x=expression(hat(rho)), y = 'frequency', title='Comparison of cor coefficients of TFPred vs. l-TFPred vs. CWAS scores')
```

```{r}
tests_dt %>% 
    dplyr::filter(name == 'pvalue') %>%
    ggplot2::ggplot(aes(x=value)) +
    geom_histogram() + theme_minimal() + facet_grid(comparison ~ .) +
    labs(x=expression(hat(rho)), y = 'frequency')
```

### Plots ...
```{r}
qq_generic(tfpred_cwas_regr_test_dt[, 'pval'] |> as.numeric(), distribution='uniform', neg_log10_values=T, BH=T, params_to_legend=list(x='topleft', bty = "n"), params_to_plot=list(frame.plot=F, pch=19))
mtext(expression("qqplot of" ~ italic(p) ~ "(regression test)"), side=3, line=2, adj=0.05, cex=1.2)
mtext(glue("TFPred scores on CWAS scores in CWAS individuals"), side=3, line=0, cex=1.2, adj=0.05)
```

```{r}
hist(tfpred_cwas_regr_test_dt[, 'pval'] |> as.numeric(), main='', xlab=expression(italic(p)*"-value"), cex.lab=1, col='brown')
mtext(expression("Distribution of" ~ p*"-values"), side=3, line=2, adj=0.05, cex=1.2) 
mtext(glue("TFPred scores on CWAS scores in CWAS individuals"), side=3, line=0, cex=1.2, adj=0.05)
```

```{r}
hist(cwas_ltfpred_dt[, 'cor'] |> as.numeric(), main='', xlab=expression(italic(hat(rho))), cex.lab=1, col='brown')
mtext(expression("Distribution of" ~ hat(rho)), side=3, line=2, adj=0.05, cex=1.2) 
mtext(glue("CWAS scores and l-TFPred scores in CWAS individuals"), side=3, line=0, cex=1.2, adj=0.05)
```

```{r}
hist(tf_cwas_dt[, 'cor'] |> as.numeric(), main='', xlab=expression(italic(hat(rho))), cex.lab=1, col='brown')
mtext(expression("Distribution of" ~ hat(rho)), side=3, line=2, adj=0.05, cex=1.2) 
mtext(glue("CWAS scores and TFPred scores in CWAS individuals"), side=3, line=0, cex=1.2, adj=0.05)
```

```{r}
hist(tf_ltf_dt[, 'cor'] |> as.numeric(), main='', xlab=expression(italic(hat(rho))), cex.lab=1, col='brown')
mtext(expression("Distribution of" ~ hat(rho)), side=3, line=2, adj=0.05, cex=1.2) 
mtext(glue("l-TFPred scores and TFPred scores in CWAS individuals"), side=3, line=0, cex=1.2, adj=0.05)
```


```{r}
ifelse(cwas_ltfpred_dt[, 'cor'] > 0, 1, 0) |> table()
```

```{r}
ifelse(tf_cwas_dt[, 'cor'] > 0, 1, 0) |> table()
```